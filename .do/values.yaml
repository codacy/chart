global:
  github:
    enabled: "true"
    login: "true"

  githubEnterprise:
    enabled: "true"
    login: "true"
    hostname: "github.dev.codacy.org"
    port: 443
    protocol: "https"
    disableSSL: "true"
    isPrivateMode: "true"

  gitlab:
    enabled: "true"
    login: "true"

  gitlabEnterprise:
    enabled: "true"
    login: "true"
    hostname: "gitlab.dev.codacy.org"
    protocol: "http"
    port: 80

  bitbucket:
    enabled: "true"
    login: "true"

  bitbucketEnterprise:
    enabled: "true"
    login: "true"
    hostname: "bitbucket-server.codacy.org"
    protocol: "http"
    port: 7990

  workers:
    config:
      dedicatedMax: 20
      inactivityTimeout: 30
      analysis:
        maxFileSizeBytes: 150000
        # These values are in seconds
        pluginTimeout:
          min: 300
          max: 900

  crow:
    config:
      passwordAuth:
        enable: true
        username: <--- crow-username --->
        password: <--- crow-password --->

  activitiesdb:
    create: false
    postgresqlUsername: <--- codacy-db-username --->
    postgresqlDatabase: activities # You need to create the DB manually
    postgresqlPassword: <--- codacy-db-password --->
    host: <--- codacy-db-host --->
    service:
      port: <--- codacy-db-port --->
  hotspotsdb:
    create: false
    postgresqlUsername: <--- codacy-db-username --->
    postgresqlDatabase: hotspots # You need to create the DB manually
    postgresqlPassword: <--- codacy-db-password --->
    host: <--- codacy-db-host --->
    service:
      port: <--- codacy-db-port --->
  crowdb:
    create: false
    host: <--- codacy-db-host --->
    postgresqlUsername: <--- codacy-db-username --->
    postgresqlDatabase: crow # You need to create the DB manually
    postgresqlPassword: <--- codacy-db-password --->
    service:
      port: <--- codacy-db-port --->
  listenerdb:
    create: false
    postgresqlUsername: <--- codacy-db-username --->
    postgresqlDatabase: listener # You need to create the DB manually
    postgresqlPassword: <--- codacy-db-password --->
    host: <--- codacy-db-host --->
    service:
      port: <--- codacy-db-port --->

codacy-ingress:
  create: true
  ingress:
    hostname:
      app: <codacy-app.dns.internal>
      api: <codacy-api.dns.internal>
    spa:
      serviceName: codacy-spa # this will be moved to the ingress default configs when the spa is released

codacy-api:
  replicaCount: 2
  service:
    type: ClusterIP
  metrics:
    serviceMonitor:
      enabled: true
    grafana_dashboards:
      enabled: true

portal:
  replicaCount: 1

activities:
  replicaCount: 1
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 3
  livenessProbe:
    initialDelaySeconds: 10
    periodSeconds: 5
    failureThreshold: 5
  activitiesdb: {}

remote-provider-service:
  replicaCount: 1
  metrics:
    serviceMonitor:
      enabled: true

hotspots-api:
  replicaCount: 1
  hotspotsdb: {}

hotspots-worker:
  replicaCount: 1

listener:
  replicaCount: 1
  listenerdb:
    create: false
  persistence:
    claim:
      size: 140Gi
  nfsserverprovisioner:
    enabled: true
    persistence:
      enabled: true
      size: 200Gi
  grafana:
    grafana_dashboards:
      enabled: true
  listenerdb: {}

core:
  replicaCount: 1

engine:
  replicaCount: 1
  metrics:
    serviceMonitor:
      enabled: true

codacy-tools:
  replicaCount: 1

worker-manager:
  replicaCount: 1

  grafana:
    grafana_dashboards:
      enabled: true

fluentdoperator:
  enabled: true
  expirationDays: 15

crow:
  replicaCount: 1
  config:
    play:
      http:
        context: "/monitoring"
    passwordAuth: {}
  crowdb: {}
