version: 2.1

orbs:
  codacy: codacy/base@1.0.1

references:
  default_doks_image: &default_doks_image
    docker:
      - image: codacy/ci-do:0.2.3
    working_directory: ~/workdir/

  qa_automation_image: &qa_automation_image
    docker:
      - image: codacy/qa-automation-test-runner:1.2.4
    working_directory: ~/workdir/

  # doks node types can be found here https://developers.digitalocean.com/documentation/v2/
  dev_environment: &dev_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster-dev
    DO_TF_WORKSPACE: dev
    RELEASE_NAME: codacy
    NAMESPACE: codacy
    NODE_TYPE: s-20vcpu-96gb
    K8S_VERSION: 1.14
    NUM_NODES: 5

  nightly_base_environment: &nightly_base_environment
    RELEASE_NAME: codacy-nightly
    NAMESPACE: codacy-nightly
    NODE_TYPE: s-20vcpu-96gb
    NUM_NODES: 4

  nightly_environment_1_14: &nightly_environment_1_14
    <<: *nightly_base_environment
    DO_TF_WORKSPACE: nightly-1-14
    DOKS_CLUSTER_NAME: codacy-doks-cluster-nightly-1-14
    K8S_VERSION: 1.14

  nightly_environment_1_15: &nightly_environment_1_15
    <<: *nightly_base_environment
    DO_TF_WORKSPACE: nightly-1-15
    DOKS_CLUSTER_NAME: codacy-doks-cluster-nightly-1-15
    K8S_VERSION: 1.15

  nightly_environment_1_16: &nightly_environment_1_16
    <<: *nightly_base_environment
    DO_TF_WORKSPACE: nightly-1-16
    DOKS_CLUSTER_NAME: codacy-doks-cluster-nightly-1-16
    K8S_VERSION: 1.16

  release_environment: &release_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster-release
    DO_TF_WORKSPACE: release
    RELEASE_NAME: codacy-release
    NAMESPACE: codacy-release
    NODE_TYPE: s-20vcpu-96gb
    K8S_VERSION: 1.15
    NUM_NODES: 4

  qa_environment_nightly: &qa_environment_nightly
    PROJECT_NAME: codacy-chart
    TEST_PATH: Suite/Enterprise/Nightly/WEB_DEV.xml
    LAUNCH_NAME: ENTERPRISE_WEB_DEV_NIGHTLY_DOKS
    LAUNCH_DESCRIPTION: 'Automated Tests Ran by CircleCI'
    LAUNCH_TAG: CIRCLECI;WEB;DIGITALOCEAN;ENTERPRISE
    RP_ENDPOINT: https://reportportal.staging.codacy.org

  unstable_helm_channel: &unstable_helm_channel
    CHANNEL: unstable

  incubator_helm_channel: &incubator_helm_channel
    CHANNEL: incubator

  nightly_helm_channel: &nightly_helm_channel
    CHANNEL: nightly

  stable_helm_channel: &stable_helm_channel
    CHANNEL: stable

  doctl_authenticate: &doctl_authenticate
    run:
      name: "Setup DO Credentials"
      command: doctl auth init -t $DO_TOKEN &>/dev/null

  purge_cluster: &purge_cluster
    <<: *default_doks_image
    steps:
      - checkout
      - <<: *doctl_authenticate
      - deploy:
          name: "Purge Cluster"
          command: |
            set +e; make -C .doks/ remove_codacy; set -e

  deploy_to_cluster: &deploy_to_cluster
    steps:
      - checkout
      - run:
          name: "Helm lint"
          command: helm lint codacy/
      - <<: *doctl_authenticate
      - deploy:
          name: Install Codacy
          command: make -C .doks/ deploy_to_doks RELEASE=$RELEASE NAMESPACE=$NAMESPACE
      - deploy:
          name: Wait for codacy-api ingress
          command: |
            external_ip=""; while [ -z $external_ip ]; do echo "Waiting for codacy-api ingress..."; external_ip=$(kubectl get service -n "$NAMESPACE" codacy-api --template="{{range .status.loadBalancer.ingress}}{{.ip}}{{end}}"); [ -z "$external_ip" ] && sleep 10; done; echo "End point ready-" && echo $external_ip; export endpoint=$external_ip
      - deploy:
          name: Update codacy-api ip address
          command: |
            CODACY_URL=$(kubectl get services codacy-api --namespace $NAMESPACE -o=jsonpath='{.status.loadBalancer.ingress[0].ip}');
            make -C .doks/ deploy_to_doks RELEASE=$RELEASE NAMESPACE=$NAMESPACE CODACY_URL=$CODACY_URL

  validate_deployment_status_on_cluster: &validate_deployment_status_on_cluster
    steps:
      - <<: *doctl_authenticate
      - run:
          name: "Validate deployment status"
          command: |
            set -e
            doctl kubernetes cluster kubeconfig save "$DOKS_CLUSTER_NAME" --set-current-context
            DEPLOYMENTS=$(kubectl get deployments -n "$NAMESPACE" | awk '{print "deployment/"$1}' | tail -n +2 )
            for DEPLOYMENT in ${DEPLOYMENTS[@]}
            do
                kubectl rollout status -n "$NAMESPACE" --timeout=30m --watch "$DEPLOYMENT"
            done

  helm_push: &helm_push
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Install requirements"
          command: |
            apk add --no-cache python3
            pip3 install ytool
      - run:
          name: Set image tag and version using semver
          command: |
            ytool -s appVersion "$(cat .version)" -s version "$(cat .version)" -f "./codacy/Chart.yaml" -e
            git --no-pager diff --no-color
      - run:
          name: Push to charts museum
          command: |
            helm dep up ./codacy
            echo "Adding 'https://charts.codacy.com/${CHANNEL}'"
            helm repo add --username "${CHARTS_REPO_USER}" --password "${CHARTS_REPO_PASS}" codacy https://charts.codacy.com/${CHANNEL}
            helm push ./codacy codacy

      - persist_to_workspace:
          root: ~/
          paths:
            - workdir

  setup_qa_environment: &setup_qa_environment
    steps:
      - attach_workspace:
          at: ~/
      - <<: *doctl_authenticate
      - run:
          name: Install selenium
          command: |
            doctl kubernetes cluster kubeconfig save "$DOKS_CLUSTER_NAME" --set-current-context
            helm repo add stable https://kubernetes-charts.storage.googleapis.com
            set +e; helm delete --purge selenium; set -e;
            helm install --name=selenium --namespace=$NAMESPACE stable/selenium --set chrome.enabled=true --set chrome.replicas=4
            kubectl rollout status -n "$NAMESPACE" --timeout=30m --watch "deployment/selenium-selenium-hub"
            kubectl rollout status -n "$NAMESPACE" --timeout=30m --watch "deployment/selenium-selenium-chrome"
      - run:
          deploy: Persist selenium hub external ip
          command: |
            external_ip=""; while [ -z $external_ip ]; do echo "Waiting for Selenium hub end point..."; external_ip=$(kubectl get service -n "$NAMESPACE" selenium-selenium-hub --template="{{range .status.loadBalancer.ingress}}{{.ip}}{{end}}"); [ -z "$external_ip" ] && sleep 10; done; echo "End point ready-" && echo $external_ip; export endpoint=$external_ip
            echo "export HUB_URL=http://$endpoint:4444/wd/hub" > .huburl
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir

  qa_job: &qa_job
    steps:
      - attach_workspace:
          at: ~/
      - deploy:
          name: Run tests
          command: |
            export EXECUTION_TIME=`date +%F_%Hh%M-%Z`
            source .huburl
            echo "Selenium hub found at $HUB_URL"
            sh /opt/tests/qa-automation-test-runner/build/run_tests.sh

  set_docker_credentials: &set_docker_credentials
    steps:
      - <<: *doctl_authenticate
      - run:
          name: Set cluster
          command: doctl kubernetes cluster kubeconfig save "$DOKS_CLUSTER_NAME" --set-current-context
      - run:
          name: "Create namespace"
          command: |
            kubectl delete namespace $NAMESPACE
            kubectl create namespace $NAMESPACE
      - run:
          name: "Set Docker Credentials"
          command: kubectl create secret docker-registry docker-credentials --docker-username=$DOCKER_USERNAME --docker-password=$DOCKER_PASSWORD --namespace $NAMESPACE

jobs:
  deploy_to_doks:
    <<: *default_doks_image
    environment:
      <<: *dev_environment
    <<: *deploy_to_cluster

  deploy_to_doks_hourly:
    <<: *default_doks_image
    environment:
      <<: *dev_environment
    <<: *deploy_to_cluster

  deploy_to_doks_nightly_1_14:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_14
    <<: *deploy_to_cluster

  deploy_to_doks_nightly_1_15:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_15
    <<: *deploy_to_cluster

  deploy_to_doks_nightly_1_16:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_16
    <<: *deploy_to_cluster

  purge_doks_nightly_codacy_1_14:
    environment:
      <<: *nightly_environment_1_14
    <<: *purge_cluster

  purge_doks_nightly_codacy_1_15:
    environment:
      <<: *nightly_environment_1_15
    <<: *purge_cluster

  purge_doks_nightly_codacy_1_16:
    environment:
      <<: *nightly_environment_1_15
    <<: *purge_cluster

  validate_deployment_status_hourly:
    <<: *default_doks_image
    environment:
      <<: *dev_environment
    <<: *validate_deployment_status_on_cluster

  validate_deployment_status_nightly_1_14:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_14
    <<: *validate_deployment_status_on_cluster

  validate_deployment_status_nightly_1_15:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_15
    <<: *validate_deployment_status_on_cluster

  validate_deployment_status_nightly_1_16:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_16
    <<: *validate_deployment_status_on_cluster

  deploy_to_doks_release:
    <<: *default_doks_image
    environment:
      <<: *release_environment
    <<: *deploy_to_cluster

  purge_doks_release_codacy:
    environment:
      <<: *release_environment
    <<: *purge_cluster

  validate_deployment_status_release:
    <<: *default_doks_image
    environment:
      <<: *release_environment
    <<: *validate_deployment_status_on_cluster

  helm_push_incubator:
    <<: *default_doks_image
    environment:
      <<: *incubator_helm_channel
    <<: *helm_push

  helm_push_nightly:
    <<: *default_doks_image
    environment:
      <<: *nightly_helm_channel
    <<: *helm_push

  helm_push_unstable:
    <<: *default_doks_image
    environment:
      <<: *unstable_helm_channel
    <<: *helm_push

  set_chart_version_nightly:
    <<: *default_doks_image
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Set chart version suffix
          command: |
            sed -i 's/SNAPSHOT/NIGHTLY/g' .version
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir

  update_versions:
    docker:
      - image: codacy/ci-do:0.2.3
    working_directory: ~/workdir/
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Store old requirements.lock"
          command: cp codacy/requirements.lock codacy/requirements_old.lock
      - run:
          name: "Get latest chart versions"
          command: make update_dependencies
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir

  get_changelogs:
    docker:
      - image: codacy/ci-base:1.0.1
    working_directory: ~/workdir/
    steps:
      - add_ssh_keys:
          fingerprints:
            - "df:83:d7:c7:d5:79:06:c2:3b:d1:fd:e2:a3:d1:12:c5"
      - attach_workspace:
          at: ~/
      - run:
          name: "Install requirements"
          command: apk add sudo util-linux && curl -Lo /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_amd64" && chmod +x /usr/local/bin/yq
      - run:
          name: "Get changelogs"
          command: bash ./.circleci/getChangelogs.sh
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir
      - store_artifacts:
          path: ~/workdir/changelogs

  set_docker_credentials_nightly_1_14:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_14
    <<: *set_docker_credentials

  set_docker_credentials_nightly_1_15:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_15
    <<: *set_docker_credentials

  set_docker_credentials_nightly_1_16:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_16
    <<: *set_docker_credentials

  set_docker_credentials_release:
    <<: *default_doks_image
    environment:
      <<: *release_environment
    <<: *set_docker_credentials

  setup_qa_environment_hourly:
    <<: *default_doks_image
    environment:
      <<: *dev_environment
      <<: *qa_environment_nightly
    <<: *setup_qa_environment

  qa_tests_hourly:
    <<: *qa_automation_image
    environment:
      <<: *dev_environment
      <<: *qa_environment_nightly
    <<: *qa_job

workflows:
  helm_lint:
    jobs:
      - codacy/checkout_and_version:
          filters:
            branches:
              ignore:
                - dev
                - master
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint codacy/
          requires:
            - codacy/checkout_and_version

  deploy_chart_to_cluster:
    jobs:
      - codacy/checkout_and_version:
          filters:
            branches:
              only:
                - dev
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint codacy/
          requires:
            - codacy/checkout_and_version
      - deploy_to_doks:
          context: CodacyDO
          requires:
            - helm_lint
      - helm_push_unstable:
          context: CodacyDO
          requires:
            - deploy_to_doks

  hourly_pipeline:
    triggers:
       - schedule:
           cron: "0 * * * 1-5"
           filters:
             branches:
               only:
                 - dev
    jobs:
      - codacy/checkout_and_version
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint codacy/
          requires:
            - codacy/checkout_and_version
      - update_versions:
          context: CodacyDO
          requires:
            - helm_lint
      - get_changelogs:
          context: CodacyDO
          requires:
            - update_versions
      - deploy_to_doks_hourly:
          context: CodacyDO
          requires:
            - codacy/checkout_and_version
            - update_versions
            - get_changelogs
      - validate_deployment_status_hourly:
          context: CodacyDO
          requires:
            - deploy_to_doks_hourly
      - setup_qa_environment_hourly:
          context: CodacyDO
          requires:
            - validate_deployment_status_hourly
      - qa_tests_hourly:
          context: CodacyDO
          requires:
            - setup_qa_environment_hourly

  nightly_pipeline:
    triggers:
       - schedule:
           cron: "0 0 * * 1-5"
           filters:
             branches:
               only:
                 - dev
    jobs:
      - codacy/checkout_and_version
      - set_chart_version_nightly:
          context: CodacyDO
          requires:
            - codacy/checkout_and_version
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint codacy/
          requires:
            - set_chart_version_nightly
      - purge_doks_nightly_codacy_1_14:
          context: CodacyDO
          requires:
            - helm_lint
      - purge_doks_nightly_codacy_1_15:
          context: CodacyDO
          requires:
            - helm_lint
      - set_docker_credentials_nightly_1_14:
          context: CodacyDO
          requires:
            - purge_doks_nightly_codacy_1_14
      - set_docker_credentials_nightly_1_15:
          context: CodacyDO
          requires:
            - purge_doks_nightly_codacy_1_15
      - update_versions:
          context: CodacyDO
          requires:
            - set_docker_credentials_nightly_1_14
            - set_docker_credentials_nightly_1_15
      - get_changelogs:
          context: CodacyDO
          requires:
            - update_versions
      - deploy_to_doks_nightly_1_14:
          context: CodacyDO
          requires:
            - codacy/checkout_and_version
            - purge_doks_nightly_codacy_1_14
            - set_docker_credentials_nightly_1_14
            - update_versions
            - get_changelogs
      - deploy_to_doks_nightly_1_15:
          context: CodacyDO
          requires:
            - codacy/checkout_and_version
            - purge_doks_nightly_codacy_1_15
            - set_docker_credentials_nightly_1_15
            - update_versions
            - get_changelogs
      - validate_deployment_status_nightly_1_14:
          context: CodacyDO
          requires:
            - deploy_to_doks_nightly_1_14
      - validate_deployment_status_nightly_1_15:
          context: CodacyDO
          requires:
            - deploy_to_doks_nightly_1_15
      - helm_push_nightly:
          context: CodacyDO
          requires:
            - validate_deployment_status_nightly_1_14
            - validate_deployment_status_nightly_1_15

  release_pipeline:
    jobs:
      - codacy/checkout_and_version:
          filters:
             branches:
               only:
                 - master
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint codacy/
          requires:
            - codacy/checkout_and_version
      - purge_doks_release_codacy:
          context: CodacyDO
          requires:
            - helm_lint
      - set_docker_credentials_release:
          context: CodacyDO
          requires:
            - purge_doks_release_codacy
      - update_versions:
          context: CodacyDO
          requires:
            - set_docker_credentials_release
      - get_changelogs:
          context: CodacyDO
          requires:
            - update_versions
      - deploy_to_doks_release:
          context: CodacyDO
          requires:
            - codacy/checkout_and_version
            - purge_doks_release_codacy
            - update_versions
            - get_changelogs
      - validate_deployment_status_release:
          context: CodacyDO
          requires:
            - deploy_to_doks_release
      - helm_push_incubator:
          context: CodacyDO
          requires:
            - validate_deployment_status_release
      - manual_qa_hold:
          type: approval
          context: CodacyDO
          requires:
           - helm_push_incubator
      - codacy/tag_version:
          name: tag_version
          context: CodacyDO
          requires:
            - manual_qa_hold
      - codacy/helm_promote:
          name: promote_chart_to_stable
          context: CodacyHelm
          chart_name: codacy
          source_charts_repo_url: "https://charts.codacy.com/incubator"
          target_charts_repo_url: "https://charts.codacy.com/stable"
          requires:
            - tag_version
