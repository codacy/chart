version: 2.1

orbs:
  codacy: codacy/base@1.0.1

references:

  default_doks_image: &default_doks_image
    docker:
      - image: codacy/ci-do:0.2.3
    working_directory: ~/workdir/

    # doks instance types can be found here https://developers.digitalocean.com/documentation/v2/
  release_environment: &release_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster-release
    DO_TF_WORKSPACE: release
    NODE_TYPE: s-1vcpu-3gb
    K8S_VERSION: 1.15

  nightly_environment: &nightly_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster-nightly
    DO_TF_WORKSPACE: nightly
    NODE_TYPE: s-1vcpu-3gb
    K8S_VERSION: 1.15

  hourly_environment: &hourly_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster-hourly
    DO_TF_WORKSPACE: hourly
    NODE_TYPE: s-1vcpu-3gb
    K8S_VERSION: 1.15

  dev_environment: &dev_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster-dev
    DO_TF_WORKSPACE: dev
    NODE_TYPE: s-20vcpu-96gb
    K8S_VERSION: 1.14

  doctl_authenticate: &doctl_authenticate
    run:
      name: "Setup DO Credentials"
      command: doctl auth init -t $DO_TOKEN &>/dev/null

  start_cluster: &start_cluster
    <<: *default_doks_image
    steps:
      - checkout
      - <<: *doctl_authenticate
      - run:
          name: "Start Cluster"
          command: make -C ./.doks/doks-cluster cluster
      - run:
          name: "Populate Cluster"
          command: make -C ./.doks/doks-cluster populate_cluster

  destroy_cluster: &destroy_cluster
    <<: *default_doks_image
    steps:
      - checkout
      - <<: *doctl_authenticate
      - deploy:
          name: "Destroy Cluster"
          command: make -C ./.doks/doks-cluster destroy_cluster
  
  purge_cluster: &purge_cluster
    <<: *default_doks_image
    steps:
      - checkout
      - <<: *doctl_authenticate
      - deploy:
          name: "Purge Cluster"
          command: make -C ./.doks/doks-cluster remove_codacy

  deploy_to_cluster: &deploy_to_cluster
    steps:
      - checkout
      - run:
          name: "Helm lint"
          command: helm lint codacy/
      - <<: *doctl_authenticate
      - deploy:
          command: make -C .doks/ deploy_to_doks

  validate_deployment_status_on_cluster: &validate_deployment_status_on_cluster
    steps:
      - attach_workspace:
          at: ~/
      - <<: *doctl_authenticate
      - run:
          name: "Validate deployment status"
          command: |
            set -e
            doctl kubernetes cluster kubeconfig save "$DOKS_CLUSTER_NAME" --set-current-context
            DEPLOYMENTS=$(kubectl get deployments -n codacy | awk '{print "deployment/"$1}' | tail -n +2 )
            for DEPLOYMENT in ${DEPLOYMENTS[@]}
            do
                kubectl rollout status -n codacy --timeout=30m --watch "$DEPLOYMENT"
            done
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir

  qa_job: &qa_job
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Fake QA job"
          command: exit 0

jobs:
  deploy_to_doks:
    <<: *default_doks_image
    environment:
      <<: *dev_environment
    <<: *deploy_to_cluster

  deploy_to_doks_release:
    <<: *default_doks_image
    environment:
      <<: *release_environment
    <<: *deploy_to_cluster
  
  deploy_to_doks_nightly:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment
    <<: *deploy_to_cluster

  deploy_to_doks_hourly:
    <<: *default_doks_image
    environment:
      <<: *hourly_environment
    <<: *deploy_to_cluster

  start_doks_release_cluster:
    environment:
      <<: *release_environment
    <<: *start_cluster
  start_doks_nightly_cluster:
    environment:
      <<: *nightly_environment
    <<: *start_cluster
  start_doks_hourly_cluster:
    environment:
      <<: *hourly_environment
    <<: *start_cluster
  start_doks_dev_cluster:
    environment:
      <<: *dev_environment
    <<: *start_cluster

  destroy_doks_release_cluster:
    environment:
      <<: *release_environment
    <<: *destroy_cluster
  destroy_doks_nightly_cluster:
    environment:
      <<: *nightly_environment
    <<: *destroy_cluster
  destroy_doks_hourly_cluster:
    environment:
      <<: *hourly_environment
    <<: *destroy_cluster
  destroy_doks_dev_cluster:
    environment:
      <<: *dev_environment
    <<: *destroy_cluster

  purge_doks_release_codacy:
    environment:
      <<: *release_environment
    <<: *purge_cluster
  purge_doks_nightly_codacy:
    environment:
      <<: *nightly_environment
    <<: *purge_cluster
  purge_doks_hourly_codacy:
    environment:
      <<: *hourly_environment
    <<: *purge_cluster
  purge_doks_dev_codacy:
    environment:
      <<: *dev_environment
    <<: *purge_cluster

  validate_deployment_status_release:
    <<: *default_doks_image
    environment:
      <<: *release_environment
    <<: *validate_deployment_status_on_cluster
  validate_deployment_status_nightly:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment
    <<: *validate_deployment_status_on_cluster
  validate_deployment_status_hourly:
    <<: *default_doks_image
    environment:
      <<: *hourly_environment
    <<: *validate_deployment_status_on_cluster
  validate_deployment_status_dev:
    <<: *default_doks_image
    environment:
      <<: *dev_environment
    <<: *validate_deployment_status_on_cluster
  
  update_versions:
    <<: *default_doks_image
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Store old requirements.lock"
          command: cp codacy/requirements.lock codacy/requirements_old.lock
      - run:
          name: "Get latest chart versions"
          command: make update_dependencies
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir

  get_changelogs:
    docker:
      - image: codacy/ci-base:1.0.1
    working_directory: ~/workdir/
    steps:
      - add_ssh_keys:
          fingerprints:
            - "df:83:d7:c7:d5:79:06:c2:3b:d1:fd:e2:a3:d1:12:c5"
      - attach_workspace:
          at: ~/
      - run:
          name: "Install requirements"
          command: apk add sudo util-linux && curl -Lo /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_amd64" && chmod +x /usr/local/bin/yq
      - run:
          name: "Get changelogs"
          command: bash ./.circleci/getChangelogs.sh
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir
      - store_artifacts:
          path: ~/workdir/changelogs

  helm_push_incubator:
    <<: *default_doks_image
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Install requirements"
          command: |
            apk add --no-cache python3
            pip3 install ytool
      - run:
          name: Set image tag and version using semver
          command: |
            ytool -s appVersion "$(cat .version)" -s version "$(cat .version)" -f "./codacy/Chart.yaml" -e
            git --no-pager diff --no-color
      - run:
          name: Push to charts museum
          command: |
            helm dep up ./codacy
            echo "Adding 'https://charts.codacy.com/incubator'"
            helm repo add --username "${CHARTS_REPO_USER}" --password "${CHARTS_REPO_PASS}" codacy https://charts.codacy.com/incubator
            helm push ./codacy codacy
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir
  
  qa_tests_release:
    <<: *default_doks_image
    environment:
      <<: *release_environment
    <<: *qa_job
  qa_tests_nightly:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment
    <<: *qa_job
  qa_tests_hourly:
    <<: *default_doks_image
    environment:
      <<: *hourly_environment
    <<: *qa_job
  qa_tests_dev:
    <<: *default_doks_image
    environment:
      <<: *dev_environment
    <<: *qa_job

workflows:
  branch_checks:
    jobs:
      - codacy/checkout_and_version:
          filters:
            branches:
              ignore:
                - master
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint codacy/
          requires:
            - codacy/checkout_and_version
      - update_versions:
          requires:
            - codacy/checkout_and_version

  deploy_chart_to_cluster:
    jobs:
      - deploy_to_doks:
          context: CodacyDO
          filters:
            branches:
              only:
                - master

  hourly_pipeline:
    triggers:
       - schedule:
           cron: "0 * * * *"
           filters:
             branches:
               only:
                 - develop
    jobs:
      - codacy/checkout_and_version
      - purge_doks_hourly_codacy:
          context: CodacyDO
          requires:
            - codacy/checkout_and_version
      - update_versions:
          context: CodacyDO
          requires:
            - purge_doks_hourly_codacy
      - get_changelogs:
          context: CodacyDO
          requires:
            - update_versions
      - deploy_to_doks_hourly:
          context: CodacyDO
          requires:
            - codacy/checkout_and_version
            - purge_doks_hourly_codacy
            - update_versions
            - get_changelogs
      - validate_deployment_status_hourly:
          context: CodacyDO
          requires:
            - deploy_to_doks_hourly
      - helm_push_incubator:
          context: CodacyDO
          requires:
            - validate_deployment_status_hourly
      - qa_tests_hourly:
          context: CodacyDO
          requires:
            - validate_deployment_status_hourly

  nightly_pipeline:
    triggers:
       - schedule:
           cron: "0 0 * * 1-5"
           filters:
             branches:
               only:
                 - master
    jobs:
      - codacy/checkout_and_version
      - purge_doks_nightly_codacy:
          context: CodacyDO
          requires:
            - codacy/checkout_and_version
      - update_versions:
          context: CodacyDO
          requires:
            - purge_doks_nightly_codacy
      - get_changelogs:
          context: CodacyDO
          requires:
            - update_versions
      - deploy_to_doks_nightly:
          context: CodacyDO
          requires:
            - codacy/checkout_and_version
            - update_versions
            - get_changelogs
      - validate_deployment_status_nightly:
          context: CodacyDO
          requires:
            - deploy_to_doks_nightly
      - helm_push_incubator:
          context: CodacyDO
          requires:
            - validate_deployment_status_nightly
      - qa_tests_nightly:
          context: CodacyDO
          requires:
            - validate_deployment_status_nightly
      # - codacy/tag_version:
      #     name: tag_version
      #     context: CodacyDO
      #     requires:
      #       - manual_qa_hold
      # - codacy/helm_promote:
      #     name: promote_chart_to_stable
      #     context: CodacyHelm
      #     chart_name: codacy
      #     source_charts_repo_url: "https://charts.codacy.com/incubator"
      #     target_charts_repo_url: "https://charts.codacy.com/stable"
      #     requires:
      #       - tag_version

  release_pipeline:
    jobs:
      - codacy/checkout_and_version:
          filters:
             branches:
               only:
                 - master
      - purge_doks_release_codacy:
          context: CodacyDO
          requires:
            - codacy/checkout_and_version
      - update_versions:
          context: CodacyDO
          requires:
            - purge_doks_release_codacy
      - get_changelogs:
          context: CodacyDO
          requires:
            - update_versions
      - deploy_to_doks_release:
          context: CodacyDO
          requires:
            - codacy/checkout_and_version
            - purge_doks_release_codacy
            - update_versions
            - get_changelogs
      - validate_deployment_status_release:
          context: CodacyDO
          requires:
            - deploy_to_doks_release
      - helm_push_incubator:
          context: CodacyDO
          requires:
            - validate_deployment_status_release
      - manual_qa_hold:
          type: approval
          context: CodacyDO
          requires:
           - validate_deployment_status_release
      # - codacy/tag_version:
      #     name: tag_version
      #     context: CodacyDO
      #     requires:
      #       - manual_qa_hold
      # - codacy/helm_promote:
      #     name: promote_chart_to_stable
      #     context: CodacyHelm
      #     chart_name: codacy
      #     source_charts_repo_url: "https://charts.codacy.com/incubator"
      #     target_charts_repo_url: "https://charts.codacy.com/stable"
      #     requires:
      #       - tag_version
