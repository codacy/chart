version: 2.1

orbs:
  codacy: codacy/base@1.2.1
  slack: circleci/slack@3.4.2

references:
  default_doks_image: &default_doks_image
    docker:
      - image: codacy/ci-do:0.3.0
    working_directory: ~/workdir/

  qa_automation_image: &qa_automation_image
    docker:
      - image: codacy/qa-automation-test-runner:1.7.2
      - image: selenium/standalone-chrome:3.141.0
        environment:
          JAVA_OPTS: -Xss256m -Xmx512m
          MAVEN_OPTS: -showversion -Xms256m -Xmx512m
    working_directory: ~/workdir

  ##################################################################################
  #  Environment variables that differentiate for each environment/installation
  ##################################################################################
  dev_environment: &dev_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster-dev
    DO_TF_WORKSPACE: dev
    RELEASE_NAME: codacy
    NAMESPACE: codacy
    NODE_TYPE: s-20vcpu-96gb
    K8S_VERSION: 1.14
    NUM_NODES: 5
    HELM_REPOSITORY: codacy-unstable
    CODACY_URL: http://dev.k8s.dev.codacy.org

  sandbox_environment: &sandbox_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster-dev
    RELEASE_NAME: codacy-hourly
    NAMESPACE: codacy-hourly
    K8S_VERSION: 1.14
    CODACY_URL: http://sandbox.k8s.dev.codacy.org

  release_environment: &release_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster-release
    DO_TF_WORKSPACE: dev
    RELEASE_NAME: codacy-release
    NAMESPACE: codacy-release
    NODE_TYPE: s-20vcpu-96gb
    K8S_VERSION: 1.15
    NUM_NODES: 5
    HELM_REPOSITORY: codacy-incubator
    CODACY_URL: http://release.k8s.dev.codacy.org

  ###################################################
  #  Env variables identify each deployment channel
  ##################################################
  unstable_helm_channel: &unstable_helm_channel
    CHANNEL: unstable
    HELM_REPOSITORY: codacy-unstable

  incubator_helm_channel: &incubator_helm_channel
    CHANNEL: incubator
    HELM_REPOSITORY: codacy-incubator

  stable_helm_channel: &stable_helm_channel
    CHANNEL: stable
    HELM_REPOSITORY: codacy-stable

  #########################################
  #  Anchors for steps
  #########################################
  doctl_authenticate: &doctl_authenticate
    run:
      name: "Setup DO Credentials"
      command: doctl auth init -t $DO_TOKEN &>/dev/null

  persist_to_workspace: &persist_to_workspace
    persist_to_workspace:
        root: ~/
        paths:
          - workdir

  attach_workspace: &attach_workspace
    attach_workspace:
          at: ~/

  swap_requirement_files: &swap_requirement_files
    run:
      name: Swap requirements files
      command: |
          mv chart/codacy/requirements-dev.yaml chart/codacy/requirements.yaml

  create_cluster: &create_cluster
    steps:
      - <<: *attach_workspace
      - <<: *doctl_authenticate
      - run:
          name: "Create Cluster"
          command: make -C ./.doks/doks-cluster cluster populate_cluster

  deploy_to_doks_from_local_dir_with_dev_requirements: &deploy_to_doks_from_local_dir_with_dev_requirements
    steps:
      - <<: *attach_workspace
      - <<: *doctl_authenticate
      - <<: *swap_requirement_files
      - <<: *update_versions
      - deploy:
          name: Install Codacy
          command: make -C .doks/ deploy_to_doks RELEASE_NAME=$RELEASE_NAME NAMESPACE=$NAMESPACE

  deploy_to_cluster_from_chartmuseum: &deploy_to_cluster_from_chartmuseum
    steps:
      - <<: *attach_workspace
      - <<: *doctl_authenticate
      - deploy:
          name: Install Codacy
          command: make -C .doks/ deploy_to_doks_from_chartmuseum RELEASE_NAME=$RELEASE_NAME NAMESPACE=$NAMESPACE VERSION=$(cat .version) HELM_REPOSITORY=$HELM_REPOSITORY

  helm_push: &helm_push
    steps:
      - <<: *attach_workspace
      - run:
          name: Set image tag and version using semver
          command: |
            ytool -s appVersion "$(cat .version)" -s version "$(cat .version)" -f "./codacy/Chart.yaml" -e
            git --no-pager diff --no-color
      - run:
          name: Push to charts museum
          command: |
            helm dep up ./codacy
            echo "Adding 'https://charts.codacy.com/${CHANNEL}'"
            helm repo add --username "${CHARTS_REPO_USER}" --password "${CHARTS_REPO_PASS}" ${HELM_REPOSITORY} https://charts.codacy.com/${CHANNEL}
            helm push ./codacy ${HELM_REPOSITORY}
      - <<: *persist_to_workspace

  qa_job: &qa_job
    steps:
      - <<: *attach_workspace
      - deploy:
          name: Run tests
          command: |
            export URL=$CODACY_URL
            export URLLANDING=$URL/
            export URLLOGGED=$URL/projects
            export EXECUTION_TIME=`date +%F_%Hh%M-%Z`
            sh /opt/tests/qa-automation-test-runner/build/run_tests.sh

  update_codacy_url: &update_codacy_url
    steps:
      - <<: *attach_workspace
      - <<: *doctl_authenticate
      - deploy:
          name: Wait for codacy-api ingress
          command: |
            doctl kubernetes cluster kubeconfig save "$DOKS_CLUSTER_NAME" --set-current-context
            external_ip=""; while [ -z $external_ip ]; do echo "Waiting for codacy-api ingress..."; external_ip=$(kubectl get service -n "$NAMESPACE" codacy-api --template="{{range .status.loadBalancer.ingress}}{{.ip}}{{end}}"); [ -z "$external_ip" ] && sleep 10; done; echo "End point ready-" && echo $external_ip; export endpoint=$external_ip
            echo "CODACY_API=$endpoint" > .apiurl
      - deploy:
          name: Update codacy-api ip address
          command: |
              CODACY_HOSTNAME=$(kubectl get services codacy-api --namespace $NAMESPACE -o=jsonpath='{.status.loadBalancer.ingress[0].ip}');
              make -C .doks/ deploy_to_doks_from_chartmuseum RELEASE=$RELEASE NAMESPACE=$NAMESPACE VERSION=$(cat .version) HELM_REPOSITORY=$HELM_REPOSITORY
      - when:
          condition: <<parameters.persist_codacy_url>>
          steps:
            - <<: *persist_to_workspace

############
#  JOBS
############

jobs:

  create_dev_cluster:
    <<: *default_doks_image
    environment:
      <<: *dev_environment
    <<: *create_cluster

  create_release_cluster:
    <<: *default_doks_image
    environment:
      <<: *dev_environment
    <<: *create_cluster

  deploy_to_doks_dev:
    <<: *default_doks_image
    environment:
      <<: *dev_environment
    <<: *deploy_to_doks_from_local_dir_with_dev_requirements

  deploy_to_doks_sandbox:
    <<: *default_doks_image
    environment:
      <<: *sandbox_environment
    <<: *deploy_to_doks_from_local_dir_with_dev_requirements

  deploy_to_doks_release:
    <<: *default_doks_image
    environment:
      <<: *release_environment
    <<: *deploy_to_cluster_from_chartmuseum

  helm_push_incubator:
    <<: *default_doks_image
    environment:
      <<: *incubator_helm_channel
    <<: *helm_push

  helm_push_unstable:
    <<: *default_doks_image
    environment:
      <<: *unstable_helm_channel
    <<: *helm_push

  set_chart_version_release:
    <<: *default_doks_image
    steps:
      - <<: *attach_workspace
      - run:
          name: Set chart version suffix
          command: |
            mv .version .version_tmp
            sed -E "s/-.*//g" .version_tmp >> .version
            rm .version_tmp
      - run:
          name: Print version
          command: cat .version
      - <<: *persist_to_workspace

  update_versions:
    <<: *default_doks_image
    working_directory: ~/workdir/
    steps:
      - <<: *attach_workspace
      - run:
          name: "Get latest chart versions"
          command: make update_dependencies update_worker_version
      - <<: *persist_to_workspace

  upload_docs:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/workdir/
    steps:
      - <<: *attach_workspace
      - add_ssh_keys:
          fingerprints:
            - "df:83:d7:c7:d5:79:06:c2:3b:d1:fd:e2:a3:d1:12:c5"
      - run:
          name: ssh keyscan
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Set cluster
          command: |
            sudo pip install -r requirements.pip
            mkdocs gh-deploy -m "[ci skip] Updated documentation."

  get_changelogs:
    docker:
      - image: codacy/ci-base:1.0.1
    working_directory: ~/workdir/
    steps:
      - add_ssh_keys:
          fingerprints:
            - "df:83:d7:c7:d5:79:06:c2:3b:d1:fd:e2:a3:d1:12:c5"
      - <<: *attach_workspace
      - run:
          name: "Install requirements"
          command: apk add sudo util-linux && curl -Lo /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_amd64" && chmod +x /usr/local/bin/yq
      - run:
          name: setup ssh
          command: |
            ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: "Get changelogs"
          command: bash ./.circleci/getChangelogs.sh
      - <<: *persist_to_workspace
      - store_artifacts:
          path: ~/workdir/changelogs

  slack_notify_release:
    <<: *default_doks_image
    steps:
      - <<: *attach_workspace
      - slack/notify:
          channel: '#sh_releases'
          color: '#2EB67D'
          title: $(cat .version)
          message: $(cat changelogs/changelog.txt)

############
#  WORKFLOWS
############

workflows:
  helm_lint:
    jobs:
      - codacy/checkout_and_version:
          filters:
            branches:
              ignore:
                - master
                - release
                - /sandbox\/.*/
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint --set-string global.akka.sessionSecret="" codacy/
          requires:
            - codacy/checkout_and_version

  deploy_chart_to_sandbox_cluster:
    jobs:
      - codacy/checkout_and_version:
          release_branch: "master"
          filters:
            branches:
              only:
                - /sandbox\/.*/
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint --set-string global.akka.sessionSecret="" codacy/
          requires:
            - codacy/checkout_and_version
      - deploy_to_doks_sandbox:
          context: CodacyDO
          requires:
            - helm_lint

  deploy_chart_to_dev_cluster:
    jobs:
      - codacy/checkout_and_version:
          dev_branch: "master"
          release_branch: "release"
          filters:
            branches:
              only:
                - master
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint --set-string global.akka.sessionSecret="" codacy/
          requires:
            - codacy/checkout_and_version
      - create_dev_cluster:
          context: CodacyDO
          requires:
              - helm_lint
      - deploy_to_doks_dev:
          context: CodacyDO
          requires:
            - create_dev_cluster
      - helm_push_unstable:
          context: CodacyDO
          requires:
            - deploy_to_doks_dev
      - upload_docs:
          requires:
            - deploy_to_doks_dev

  release_pipeline:
    jobs:
      - codacy/checkout_and_version:
          dev_branch: "master"
          release_branch: "releases"
          filters:
            tags:
              only: /^release-.*/
            branches:
              ignore: /.*/
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint --set-string global.akka.sessionSecret="" codacy/
          requires:
            - codacy/checkout_and_version
          filters:
            tags:
              only: /^release-.*/
      - create_release_cluster:
          context: CodacyDO
          requires:
              - helm_lint
      - set_chart_version_release:
          context: CodacyDO
          requires:
            - create_release_cluster
          filters:
            tags:
              only: /^release-.*/
      - update_versions:
          context: CodacyDO
          requires:
            - set_chart_version_release
          filters:
            tags:
              only: /^release-.*/
      - helm_push_incubator:
          context: CodacyDO
          requires:
            - update_versions
          filters:
            tags:
              only: /^release-.*/
      - get_changelogs:
          context: CodacyDO
          requires:
            - helm_push_incubator
          filters:
            tags:
              only: /^release-.*/
      - deploy_to_doks_release:
          context: CodacyDO
          requires:
            - helm_push_incubator
          filters:
            tags:
              only: /^release-.*/
      - manual_qa_hold:
          type: approval
          context: CodacyDO
          requires:
           - deploy_to_doks_release
          filters:
            tags:
              only: /^release-.*/
      - codacy/tag_version:
          name: tag_version
          context: CodacyDO
          requires:
            - manual_qa_hold
          filters:
            tags:
              only: /^release-.*/
      - codacy/helm_promote:
          name: promote_chart_to_stable
          context: CodacyHelm
          chart_name: codacy
          source_charts_repo_url: "https://charts.codacy.com/incubator"
          target_charts_repo_url: "https://charts.codacy.com/stable"
          requires:
            - tag_version
          filters:
            tags:
              only: /^release-.*/
      - slack_notify_release:
          context: CodacyDO
          requires:
            - promote_chart_to_stable
            - get_changelogs
          filters:
            tags:
              only: /^release-.*/
