version: 2.1

orbs:
  codacy: codacy/base@4.0.3
  slack: circleci/slack@3.4.2

references:
  default_doks_image: &default_doks_image
    docker:
      - image: codacy/ci-do:1.6.5
    working_directory: ~/workdir/

  helm_values: &helm_values
    microk8s_values_content: |
      global:
        imagePullSecrets:
          - name: docker-credentials
        play:
          cryptoSecret: "TEST_STRING"
        akka:
          sessionSecret: "TEST_STRING"
        filestore:
          contentsSecret: "TEST_STRING"
          uuidSecret: "TEST_STRING"
        cacheSecret: "TEST_STRING"
        codacy:
          crow:
            url: "http://localhost:9000"
      listener:
        persistence:
          claim:
            size: 8Gi
        nfsserverprovisioner:
          persistence:
            size: 10Gi
      minio:
        persistence:
          size: 10Gi
      rabbitmq-ha:
        replicaCount: 1

  qa_automation_image: &qa_automation_image
    docker:
      - image: codacy/qa-automation-test-runner:2.15.3
      - image: selenium/standalone-chrome:3.141.0
        environment:
          JAVA_OPTS: -Xss256m -Xmx512m
          MAVEN_OPTS: -showversion -Xms256m -Xmx512m
    working_directory: ~/workdir

  ##################################################################################
  #  Environment variables that differentiate for each environment/installation
  ##################################################################################
  dev_environment: &dev_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster
    DO_TF_WORKSPACE: infrastructure
    RELEASE_NAME: codacy-dev
    NAMESPACE: codacy-dev
    ENVIRONMENT: dev
    HELM_REPOSITORY: codacy-unstable
    CODACY_URL: http://dev.k8s.dev.codacy.org
    HELM_INSTALL_EXTRA_FLAGS: --set global.github.app.name=codacy-k8s-selfhosted-dev --set global.github.app.id="${GITHUB_APP_ID_DEV}" --set global.github.app.privateKey="${GITHUB_PRIVATE_KEY_DEV}" --set global.github.clientId=${GITHUB_CLIENTID_DEV} --set global.github.clientSecret=${GITHUB_CLIENTSECRET_DEV} --set global.githubEnterprise.app.name=codacy-k8s-selfhosted-dev --set global.githubEnterprise.app.id="${GITHUB_ENTERPRISE_APP_ID_DEV}" --set global.githubEnterprise.app.privateKey="${GITHUB_ENTERPRISE_PRIVATE_KEY_DEV}" --set global.githubEnterprise.clientId=${GITHUB_ENTERPRISE_CLIENTID_DEV} --set global.githubEnterprise.clientSecret=${GITHUB_ENTERPRISE_CLIENTSECRET_DEV} --set global.bitbucket.key="${BITBUCKET_KEY_DEV}" --set global.bitbucket.secret="${BITBUCKET_SECRET_DEV}" --set global.bitbucketEnterprise.consumerKey="${BITBUCKET_ENTERPRISE_CONSUMER_KEY_DEV}" --set global.bitbucketEnterprise.consumerPublicKey="${BITBUCKET_ENTERPRISE_CONSUMER_PUBLIC_KEY_DEV}" --set global.bitbucketEnterprise.consumerPrivateKey="${BITBUCKET_ENTERPRISE_CONSUMER_PRIVATE_KEY_DEV}" --set global.gitlab.clientId="${GITLAB_CLIENTID_DEV}" --set global.gitlab.clientSecret="${GITLAB_CLIENTSECRET_DEV}" --set global.gitlabEnterprise.clientId="${GITLABENTERPRISE_CLIENTID_DEV}" --set global.gitlabEnterprise.clientSecret="${GITLABENTERPRISE_CLIENTSECRET_DEV}"

  sandbox_environment: &sandbox_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster
    DO_TF_WORKSPACE: infrastructure
    RELEASE_NAME: codacy-sandbox
    NAMESPACE: codacy-sandbox
    ENVIRONMENT: sandbox
    CODACY_URL: http://sandbox.k8s.dev.codacy.org
    HELM_INSTALL_EXTRA_FLAGS: --set global.github.app.name=codacy-k8s-selfhosted-sandbox --set global.github.app.id="${GITHUB_APP_ID_SANDBOX}" --set global.github.app.privateKey="${GITHUB_PRIVATE_KEY_SANDBOX}" --set global.github.clientId=${GITHUB_CLIENTID_SANDBOX} --set global.github.clientSecret=${GITHUB_CLIENTSECRET_SANDBOX} --set global.githubEnterprise.app.name=codacy-k8s-selfhosted-sandbox --set global.githubEnterprise.app.id="${GITHUB_ENTERPRISE_APP_ID_SANDBOX}" --set global.githubEnterprise.app.privateKey="${GITHUB_ENTERPRISE_PRIVATE_KEY_SANDBOX}" --set global.githubEnterprise.clientId=${GITHUB_ENTERPRISE_CLIENTID_SANDBOX} --set global.githubEnterprise.clientSecret=${GITHUB_ENTERPRISE_CLIENTSECRET_SANDBOX} --set global.bitbucket.key="${BITBUCKET_KEY_SANDBOX}" --set global.bitbucket.secret="${BITBUCKET_SECRET_SANDBOX}" --set global.bitbucketEnterprise.consumerKey="${BITBUCKET_ENTERPRISE_CONSUMER_KEY_SANDBOX}" --set global.bitbucketEnterprise.consumerPublicKey="${BITBUCKET_ENTERPRISE_CONSUMER_PUBLIC_KEY_SANDBOX}" --set global.bitbucketEnterprise.consumerPrivateKey="${BITBUCKET_ENTERPRISE_CONSUMER_PRIVATE_KEY_SANDBOX}" --set global.gitlab.clientId="${GITLAB_CLIENTID_SANDBOX}" --set global.gitlab.clientSecret="${GITLAB_CLIENTSECRET_SANDBOX}" --set global.gitlabEnterprise.clientId="${GITLABENTERPRISE_CLIENTID_SANDBOX}" --set global.gitlabEnterprise.clientSecret="${GITLABENTERPRISE_CLIENTSECRET_SANDBOX}"

  release_environment: &release_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster
    DO_TF_WORKSPACE: infrastructure
    RELEASE_NAME: codacy-release
    NAMESPACE: codacy-release
    ENVIRONMENT: release
    HELM_REPOSITORY: codacy-incubator
    CODACY_URL: http://release.k8s.dev.codacy.org
    HELM_INSTALL_EXTRA_FLAGS: --set global.github.app.name=codacy-k8s-selfhost-release --set global.github.app.id="${GITHUB_APP_ID_RELEASE}" --set global.github.app.privateKey="${GITHUB_PRIVATE_KEY_RELEASE}" --set global.github.clientId=${GITHUB_CLIENTID_RELEASE} --set global.github.clientSecret=${GITHUB_CLIENTSECRET_RELEASE} --set global.githubEnterprise.app.name=codacy-k8s-selfhost-release --set global.githubEnterprise.app.id="${GITHUB_ENTERPRISE_APP_ID_RELEASE}" --set global.githubEnterprise.app.privateKey="${GITHUB_ENTERPRISE_PRIVATE_KEY_RELEASE}" --set global.githubEnterprise.clientId=${GITHUB_ENTERPRISE_CLIENTID_RELEASE} --set global.githubEnterprise.clientSecret=${GITHUB_ENTERPRISE_CLIENTSECRET_RELEASE} --set global.bitbucket.key="${BITBUCKET_KEY_RELEASE}" --set global.bitbucket.secret="${BITBUCKET_SECRET_RELEASE}" --set global.bitbucketEnterprise.consumerKey="${BITBUCKET_ENTERPRISE_CONSUMER_KEY_RELEASE}" --set global.bitbucketEnterprise.consumerPublicKey="${BITBUCKET_ENTERPRISE_CONSUMER_PUBLIC_KEY_RELEASE}" --set global.bitbucketEnterprise.consumerPrivateKey="${BITBUCKET_ENTERPRISE_CONSUMER_PRIVATE_KEY_RELEASE}" --set global.gitlab.clientId="${GITLAB_CLIENTID_RELEASE}" --set global.gitlab.clientSecret="${GITLAB_CLIENTSECRET_RELEASE}" --set global.gitlabEnterprise.clientId="${GITLABENTERPRISE_CLIENTID_RELEASE}" --set global.gitlabEnterprise.clientSecret="${GITLABENTERPRISE_CLIENTSECRET_RELEASE}"

  ###################################################
  #  Env variables identify each deployment channel
  ##################################################
  unstable_helm_channel: &unstable_helm_channel
    CHANNEL: unstable
    HELM_REPOSITORY: codacy-unstable

  incubator_helm_channel: &incubator_helm_channel
    CHANNEL: incubator
    HELM_REPOSITORY: codacy-incubator

  stable_helm_channel: &stable_helm_channel
    CHANNEL: stable
    HELM_REPOSITORY: codacy-stable

  ########################################################
  #  Env variables defining qa test paths and environment
  ########################################################

  qa_environment_release: &qa_environment_release
    SELENIUM_DRIVER_URL: http://localhost:4444/wd/hub
    HUB_URL: http://localhost:4444/wd/hub
    PROJECT_NAME: k8s-releases
    LAUNCH_DESCRIPTION: "Automated Tests Ran by CircleCI"
    RP_ENDPOINT: https://reportportal.dev.codacy.org

  qa_selfhosted_web_testpath: &qa_selfhosted_web_testpath
    TEST_PATH: Suite/SELF-HOSTED/RELEASE/WEB.xml
    LAUNCH_TAG: CIRCLECI;WEB;SELFHOSTED;RELEASE
    LAUNCH_NAME: WEB_K8S_RELEASE

  qa_selfhosted_e2e_testpath: &qa_selfhosted_e2e_testpath
    TEST_PATH: Suite/SELF-HOSTED/RELEASE/E2E.xml
    LAUNCH_TAG: CIRCLECI;E2E;SELFHOSTED;RELEASE
    LAUNCH_NAME: E2E_K8S_RELEASE

  qa_selfhosted_api_testpath: &qa_selfhosted_api_testpath
    TEST_PATH: Suite/SELF-HOSTED/RELEASE/API.xml
    LAUNCH_TAG: CIRCLECI;API;SELFHOSTED;RELEASE
    LAUNCH_NAME: API_K8S_RELEASE

  #########################################
  #  Anchors for steps
  #########################################
  doctl_authenticate: &doctl_authenticate
    run:
      name: "Setup DO Credentials"
      command: doctl auth init -t $DO_TOKEN &>/dev/null

  persist_to_workspace: &persist_to_workspace
    persist_to_workspace:
      root: ~/workdir
      paths:
        - "*"

  attach_workspace: &attach_workspace
    attach_workspace:
      at: ~/workdir

  update_versions: &update_versions
    run:
      name: "Get latest chart versions"
      command: make update_dependencies

  swap_requirement_files: &swap_requirement_files
    run:
      name: Swap requirements files
      command: |
        mv codacy/requirements-dev.yaml codacy/requirements.yaml

  create_cluster: &create_cluster
    steps:
      - <<: *attach_workspace
      - <<: *doctl_authenticate
      - deploy:
          name: "Create K8S Cluster"
          command: make -C ./.do/k8s-cluster start_cluster
      - deploy:
          name: "Create DB Cluster"
          command: make -C ./.do/db-cluster start_cluster
      - <<: *persist_to_workspace

  deploy_to_doks_from_local_dir_with_dev_requirements: &deploy_to_doks_from_local_dir_with_dev_requirements
    steps:
      - <<: *attach_workspace
      - <<: *doctl_authenticate
      - <<: *swap_requirement_files
      - <<: *update_versions
      - run:
          name: Set dev branch version using unix timestamp
          command: |
            echo "$(date +%s)-$(cat .version)-dev-$(git rev-parse --short HEAD)" > .version
            cat .version
            ytool -s appVersion "$(cat .version)" -s version "$(cat .version)" -f "./codacy/Chart.yaml" -e
      - deploy:
          name: Install Codacy
          command: make -e -C .do/ deploy_to_doks_from_local_dir

  deploy_to_cluster_from_chartmuseum: &deploy_to_cluster_from_chartmuseum
    steps:
      - <<: *attach_workspace
      - <<: *doctl_authenticate
      - deploy:
          name: Install Codacy
          command: make -e -C .do/ deploy_to_doks_from_chartmuseum VERSION=$(cat .version)

  helm_push: &helm_push
    steps:
      - <<: *attach_workspace
      - run:
          name: Set image tag and version using semver
          command: |
            ytool -s appVersion "$(cat .version)" -s version "$(cat .version)" -f "./codacy/Chart.yaml" -e
            git --no-pager diff --no-color
      - run:
          name: Push to charts museum
          command: |
            make setup_helm_repos
            if [ -f requirements.lock ] ; then rm -v requirements.lock; fi
            helm dep build ./codacy
            echo "Adding 'https://charts.codacy.com/${CHANNEL}'"
            helm repo add --username "${CHARTS_REPO_USER}" --password "${CHARTS_REPO_PASS}" ${HELM_REPOSITORY} https://charts.codacy.com/${CHANNEL}
            helm push ./codacy ${HELM_REPOSITORY}
      - <<: *persist_to_workspace

  qa_job: &qa_job
    steps:
      - <<: *attach_workspace
      - deploy:
          name: Run tests
          command: |
            export EXECUTION_TIME=`date +%F_%Hh%M-%Z`
            sh /opt/tests/qa-automation-test-runner/build/run_tests.sh

############
#  JOBS
############

jobs:
  checkout:
    docker:
      - image: codacy/ci-base:1.0.1
    working_directory: ~/workdir/
    steps:
      - checkout
      - run:
          name: setup version from git tag
          command: |
            git tag --sort creatordate | grep -E "^([0-9]+\.[0-9]+\.[0-9]+)-RC.*" | tail -n -1 > .version
            echo $(cat .version)
      - <<: *persist_to_workspace

  create_dev_cluster:
    <<: *default_doks_image
    environment:
      <<: *dev_environment
    <<: *create_cluster

  create_sandbox_cluster:
    <<: *default_doks_image
    environment:
      <<: *sandbox_environment
    <<: *create_cluster

  create_release_cluster:
    <<: *default_doks_image
    environment:
      <<: *release_environment
    <<: *create_cluster

  deploy_to_doks_dev:
    <<: *default_doks_image
    environment:
      <<: *dev_environment
    <<: *deploy_to_doks_from_local_dir_with_dev_requirements

  deploy_to_doks_sandbox:
    <<: *default_doks_image
    environment:
      <<: *sandbox_environment
    <<: *deploy_to_doks_from_local_dir_with_dev_requirements

  deploy_to_doks_release:
    <<: *default_doks_image
    environment:
      <<: *release_environment
    <<: *deploy_to_cluster_from_chartmuseum

  helm_push_incubator:
    <<: *default_doks_image
    environment:
      <<: *incubator_helm_channel
    <<: *helm_push

  helm_push_unstable:
    <<: *default_doks_image
    environment:
      <<: *unstable_helm_channel
    <<: *helm_push

  test_web:
    <<: *qa_automation_image
    environment:
      <<: *qa_environment_release
      <<: *qa_selfhosted_web_testpath
    <<: *qa_job

  test_e2e:
    <<: *qa_automation_image
    environment:
      <<: *qa_environment_release
      <<: *qa_selfhosted_e2e_testpath
    <<: *qa_job

  test_api:
    <<: *qa_automation_image
    environment:
      <<: *qa_environment_release
      <<: *qa_selfhosted_api_testpath
    <<: *qa_job

  set_chart_version_nightly:
    <<: *default_doks_image
    steps:
      - <<: *attach_workspace
      - run:
          name: Set chart version suffix
          command: |
            mv .version .rc_version
            sed -E "s/SNAPSHOT\.[0-9,a-z]+/NIGHTLY.$(date "+%d-%m-%Y")/g" .rc_version >> .version
      - run:
          name: Print version
          command: cat .version
      - <<: *persist_to_workspace

  set_chart_version_release:
    <<: *default_doks_image
    steps:
      - <<: *attach_workspace
      - run:
          name: Set chart version suffix
          command: |
            mv .version .rc_version
            sed -E "s/-.*//g" .rc_version >> .version
      - run:
          name: Print version
          command: cat .version
      - <<: *persist_to_workspace

  upload_docs:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/workdir/
    steps:
      - <<: *attach_workspace
      - add_ssh_keys:
          fingerprints:
            - "df:83:d7:c7:d5:79:06:c2:3b:d1:fd:e2:a3:d1:12:c5"
      - run:
          name: ssh keyscan
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Set cluster
          command: |
            sudo pip install -r requirements.pip
            mkdocs gh-deploy -m "[ci skip] Updated documentation."

  get_changelogs:
    <<: *default_doks_image
    steps:
      - add_ssh_keys:
          fingerprints:
            - "df:83:d7:c7:d5:79:06:c2:3b:d1:fd:e2:a3:d1:12:c5"
      - <<: *attach_workspace
      - run:
          name: "Install requirements"
          command: apk add sudo util-linux && curl -Lo /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_amd64" && chmod +x /usr/local/bin/yq
      - run:
          name: setup ssh
          command: |
            ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: "Get changelogs"
          command: bash ./.circleci/getChangelogs.sh
      - store_artifacts:
          path: ~/workdir/changelogs
      - run:
          name: Stash changelog file url
          command: |
            curl -s "https://circleci.com/api/v1.1/project/github/codacy/chart/${CIRCLE_BUILD_NUM}/artifacts?circle-token=${CIRCLE_API_USER_TOKEN}" | jq '.[] | .url' | sed 's/"//g' >> .changelog_url
      - <<: *persist_to_workspace

  slack_notify_release:
    <<: *default_doks_image
    steps:
      - <<: *attach_workspace
      - slack/notify:
          channel: "#sh_releases"
          color: "#2EB67D"
          title: $(cat .version)
          message: |
            Version $(cat .version) of the Codacy chart has been released!
            Changelog: $(cat .changelog_url)

############
#  WORKFLOWS
############

workflows:
  helm_lint:
    jobs:
      - codacy/checkout_and_version:
          filters:
            branches:
              ignore:
                - master
                - release
                - /sandbox\/.*/
                - /release.*/
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint --set-string global.akka.sessionSecret="" codacy/
          requires:
            - codacy/checkout_and_version

  deploy_chart_to_sandbox_cluster:
    jobs:
      - codacy/checkout_and_version:
          release_branch: "master"
          filters:
            branches:
              only:
                - /sandbox\/.*/
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint --set-string global.akka.sessionSecret="" codacy/
          requires:
            - codacy/checkout_and_version
      - create_sandbox_cluster:
          context: CodacyDO
          requires:
            - helm_lint
      - deploy_to_doks_sandbox:
          context: CodacyDO
          requires:
            - create_sandbox_cluster

  deploy_chart_to_dev_cluster:
    jobs:
      - codacy/checkout_and_version:
          dev_branch: "master"
          release_branch: "master"
          filters:
            branches:
              only:
                - master
      - upload_docs:
          requires:
            - codacy/checkout_and_version
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint --set-string global.akka.sessionSecret="" codacy/
          requires:
            - codacy/checkout_and_version
      - create_dev_cluster:
          context: CodacyDO
          requires:
            - helm_lint
      - deploy_to_doks_dev:
          context: CodacyDO
          requires:
            - create_dev_cluster

  nightly_pipeline:
    triggers:
      - schedule:
          cron: "0 0 * * 1-5"
          filters:
            branches:
              only:
                - master
    jobs:
      - codacy/checkout_and_version:
          dev_branch: "master"
          release_branch: "releases"
      - set_chart_version_nightly:
          context: CodacyDO
          requires:
            - codacy/checkout_and_version
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint --set-string global.akka.sessionSecret="" codacy/
          requires:
            - set_chart_version_nightly
      - helm_push_unstable:
          context: CodacyDO
          requires:
            - helm_lint
      - get_changelogs:
          context: CodacyDO
          requires:
            - helm_lint
      - codacy/microk8s_install:
          name: install_k8s-1.16_helm-2.16
          helm_repo: "https://charts.codacy.com/unstable"
          chart_version: $(cat .version)
          microk8s_channel: "1.16/stable"
          helm_version: "v2.16.7"
          <<: *helm_values
          requires:
            - helm_push_unstable
      - codacy/microk8s_install:
          name: install_k8s-1.15_helm-2.16
          helm_repo: "https://charts.codacy.com/unstable"
          chart_version: $(cat .version)
          microk8s_channel: "1.15/stable"
          helm_version: "v2.16.7"
          <<: *helm_values
          requires:
            - helm_push_unstable
      - codacy/microk8s_install:
          name: install_k8s-1.14_helm-2.16
          helm_repo: "https://charts.codacy.com/unstable"
          chart_version: $(cat .version)
          microk8s_channel: "1.14/stable"
          helm_version: "v2.16.7"
          <<: *helm_values
          requires:
            - helm_push_unstable
      - codacy/microk8s_install:
          name: install_k8s-1.13_helm-2.16
          helm_repo: "https://charts.codacy.com/unstable"
          chart_version: $(cat .version)
          microk8s_channel: "1.13/stable"
          helm_version: "v2.16.7"
          <<: *helm_values
          requires:
            - helm_push_unstable

      - codacy/microk8s_install:
          name: install_k8s-1.16_helm-3.2
          helm_repo: "https://charts.codacy.com/unstable"
          chart_version: $(cat .version)
          microk8s_channel: "1.16/stable"
          helm_version: "v3.2.0"
          <<: *helm_values
          requires:
            - helm_push_unstable
      - codacy/microk8s_install:
          name: install_k8s-1.15_helm-3.2
          helm_repo: "https://charts.codacy.com/unstable"
          chart_version: $(cat .version)
          microk8s_channel: "1.15/stable"
          helm_version: "v3.2.0"
          <<: *helm_values
          requires:
            - helm_push_unstable
      - codacy/microk8s_install:
          name: install_k8s-1.14_helm-3.2
          helm_repo: "https://charts.codacy.com/unstable"
          chart_version: $(cat .version)
          microk8s_channel: "1.14/stable"
          helm_version: "v3.2.0"
          <<: *helm_values
          requires:
            - helm_push_unstable
      - codacy/microk8s_install:
          name: install_k8s-1.13_helm-3.2
          helm_repo: "https://charts.codacy.com/unstable"
          chart_version: $(cat .version)
          microk8s_channel: "1.13/stable"
          helm_version: "v3.2.0"
          <<: *helm_values
          requires:
            - helm_push_unstable

      - codacy/helm_promote:
          name: promote_chart_to_stable
          context: CodacyHelm
          chart_name: codacy
          source_charts_repo_url: "https://charts.codacy.com/unstable"
          target_charts_repo_url: "https://charts.codacy.com/nightly"
          requires:
            - install_k8s-1.13_helm-2.16
            - install_k8s-1.14_helm-2.16
            - install_k8s-1.15_helm-2.16
            - install_k8s-1.16_helm-2.16
            - install_k8s-1.13_helm-3.2
            - install_k8s-1.14_helm-3.2
            - install_k8s-1.15_helm-3.2
            - install_k8s-1.16_helm-3.2

  release_pipeline:
    jobs:
      - checkout:
          filters:
            branches:
              only:
                - /release.*/
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint --set-string global.akka.sessionSecret="" codacy/
          requires:
            - checkout
      - helm_push_incubator:
          context: CodacyDO
          requires:
            - helm_lint
      - create_release_cluster:
          context: CodacyDO
          requires:
            - helm_lint
      - deploy_to_doks_release:
          context: CodacyDO
          requires:
            - create_release_cluster
      - get_changelogs:
          context: CodacyDO
          requires:
            - deploy_to_doks_release
      - test_web:
          context: CodacyDO
          requires:
            - deploy_to_doks_release
      - test_e2e:
          context: CodacyDO
          requires:
            - deploy_to_doks_release
      - test_api:
          context: CodacyDO
          requires:
            - deploy_to_doks_release
      - manual_qa_hold:
          type: approval
          context: CodacyDO
          requires:
            - get_changelogs
            - test_web
            - test_e2e
            - test_api
      - set_chart_version_release:
          context: CodacyDO
          requires:
            - manual_qa_hold
      - codacy/tag_version:
          name: tag_version
          context: CodacyDO
          requires:
            - set_chart_version_release
      - codacy/helm_promote:
          name: promote_chart_to_stable
          context: CodacyHelm
          chart_name: codacy
          source_version: "$(cat .rc_version)"
          source_charts_repo_url: "https://charts.codacy.com/incubator"
          target_charts_repo_url: "https://charts.codacy.com/stable"
          requires:
            - tag_version
      - codacy/tag_version:
          name: tag_version_latest
          context: CodacyDO
          version: latest
          force: true
          requires:
            - promote_chart_to_stable
      - slack_notify_release:
          context: CodacyDO
          requires:
            - tag_version_latest
