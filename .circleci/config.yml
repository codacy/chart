version: 2.1

orbs:
  codacy: codacy/base@dev:1.1.0-featuredigitaloceanorbs.715001f

jobs:
  deploy_to_doks:
    docker:
      - image: codacy/ci-do:0.2.3
    environment:
      DOKS_CLUSTER_NAME: codacy-doks-cluster-dev
    working_directory: ~/workdir/
    steps:
      - checkout
      - run:
          name: "Helm lint"
          command: helm lint codacy/
      - run:
          name: "Setup DO Credentials"
          command: doctl auth init -t $DO_TOKEN &>/dev/null
      - deploy:
          command: make -C .doks/ deploy_to_doks

  update_versions:
    docker:
      - image: codacy/ci-do:0.2.3
    working_directory: ~/workdir/
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Store old requirements.lock"
          command: cp codacy/requirements.lock codacy/requirements_old.lock
      - run:
          name: "Get latest chart versions"
          command: make update_dependencies
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir
      - run:
          name: "Destroy Cluster"
          command: make -C ./.doks/doks-cluster destroy_cluster
          when: on_fail

  get_changelogs:
    docker:
      - image: codacy/ci-base:1.0.1
    working_directory: ~/workdir/
    steps:
      - add_ssh_keys:
          fingerprints:
            - "df:83:d7:c7:d5:79:06:c2:3b:d1:fd:e2:a3:d1:12:c5"
      - attach_workspace:
          at: ~/
      - run:
          name: "Install requirements"
          command: apk add sudo util-linux && curl -Lo /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_amd64" && chmod +x /usr/local/bin/yq
      - run:
          name: "Get changelogs"
          command: bash ./.circleci/getChangelogs.sh
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir
      - store_artifacts:
          path: ~/workdir/changelogs

  manual_qa_hold:
    docker:
      - image: codacy/ci-do:0.2.3
    environment:
      DOKS_CLUSTER_NAME: codacy-doks-cluster-nightly
      DO_TF_WORKSPACE: nightly
    working_directory: ~/workdir/
    steps:
      - checkout
      - run:
          name: "Setup DO Credentials"
          command: doctl auth init -t $DO_TOKEN &>/dev/null
          when: on_fail
      - run:
          name: "Destroy Cluster"
          command: make -C ./.doks/doks-cluster destroy_cluster
          when: on_fail

  helm_push_incubator:
    docker:
      - image: codacy/ci-do:0.2.3
    environment:
      DOKS_CLUSTER_NAME: codacy-doks-cluster-nightly
      DO_TF_WORKSPACE: nightly
    working_directory: ~/workdir/
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Install requirements"
          command: |
            apk add --no-cache python3
            pip3 install ytool
      - run:
          name: Set image tag and version using semver
          command: |
            ytool -s appVersion "$(cat .version)" -s version "$(cat .version)" -f "./codacy/Chart.yaml" -e
            git --no-pager diff --no-color
      - run:
          name: Push to charts museum
          command: |
            helm dep up ./codacy
            echo "Adding 'https://charts.codacy.com/incubator'"
            helm repo add --username "${CHARTS_REPO_USER}" --password "${CHARTS_REPO_PASS}" codacy https://charts.codacy.com/incubator
            helm push ./codacy codacy

workflows:
  branch_checks:
    jobs:
      - codacy/checkout_and_version:
          filters:
            branches:
              ignore:
                - master
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint codacy/
          requires:
            - codacy/checkout_and_version
      - update_versions:
          requires:
            - codacy/checkout_and_version

  deploy_chart_to_cluster:
    jobs:
      - deploy_to_doks:
          context: CodacyDO
          filters:
            branches:
              only:
                - master

  create_cluster_pipeline:
    jobs:
      - codacy/checkout_and_version:
          context: CodacyDO
      - codacy/doks_cluster_start:
          context: CodacyDO
          cluster_name: "codacy-doks-cluster-nightly"
          kubernetes_version: "1.15"
          tf_workspace: "nightly"
          destroy_cluster: true
          start_cluster_command: "make -C ./workdir/.doks/doks-cluster cluster; make -C ./.doks/doks-cluster populate_cluster"
          destroy_cluster_command: "make -C ./workdir/.doks/doks-cluster destroy_cluster"
          requires:
            - codacy/checkout_and_version

  release_pipeline:
    jobs:
      - codacy/checkout_and_version:
          context: CodacyDO
          filters:
              branches:
                only:
                  - master
      - codacy/doks_cluster_purge:
          context: CodacyDO
          cluster_name: "codacy-doks-cluster-nightly"
      - update_versions:
          context: CodacyDO
          requires:
            - codacy/doks_cluster_purge
      - get_changelogs:
          context: CodacyDO
          requires:
            - update_versions
      - codacy/doks_deploy:
          cluster_name: "codacy-doks-cluster-nightly"
          deployment_command: "make -C .doks/ deploy_to_doks"
          requires:
            - get_changelogs
      - codacy/doks_validate:
          context: CodacyDO
          requires: 
            - codacy/doks_deploy
      - helm_push_incubator:
          context: CodacyDO
          requires:
            - codacy/doks_validate
      - manual_qa_hold:
          type: approval
          requires:
            - helm_push_incubator
      - codacy/tag_version:
          name: tag_version
          context: CodacyDO
          requires:
            - manual_qa_hold
      - codacy/helm_promote:
          name: promote_chart_to_stable
          context: CodacyHelm
          chart_name: codacy
          source_charts_repo_url: "https://charts.codacy.com/incubator"
          target_charts_repo_url: "https://charts.codacy.com/stable"
          requires:
            - tag_version
      
      